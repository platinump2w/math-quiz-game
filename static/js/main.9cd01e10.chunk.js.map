{"version":3,"sources":["redux/reducers/index.jsx","redux/store.jsx","redux/constants/index.jsx","redux/actions/index.jsx","components/Button.jsx","utils/storage.js","containers/Start.jsx","components/Beginning.jsx","constant/colors.js","components/AnswerModal.jsx","utils/problems.js","utils/math.js","components/Quiz.jsx","components/Done.jsx","components/Timmer.jsx","components/Lifes.jsx","components/Points.jsx","components/TableScore.jsx","containers/MathQuiz.jsx","App.js","redux/index.jsx","serviceWorker.js","index.js"],"names":["initialState","points","lifes","seconds","level","isFinished","isStarted","compose","applyMiddleware","thunk","createStore","state","arguments","length","undefined","action","type","newPonts","payload","Object","assign","newCorrectState","newLive","stateGame","bol","dispatch","Button","_ref","children","isClicked","react_default","a","createElement","className","onClick","Persistent","set","key","value","localStorage","setItem","get","getItem","Session","sessionStorage","Start","player","setNameOfPlayer","event","_this","setState","target","clicked","props","startPressed","components_Button","this","React","Component","Beginning","msg","handleCount","prevState","_this2","intervalRef","setInterval","nextProps","nextState","clearInterval","isComplete","Colors","yellow","lightBlue","darkGray","midGray","lightGray","darkBg","red","green","AnswerModal","modalType","text","class","el","concat","problems","description","answers","parseAnswer","answer","toLowerCase","replaceAll","math","generateProblem","Math","floor","random","compare","problem","firstAnswer","secondAnswer","firstProblemAnswer","secondProblemAnswer","firstPlayerAnswer","secondPlayerAnswer","Quiz","_isMounted","modal","modalShowing","streaks","earnLife","onEarnLife","showModal","correctAnswer","onCorretAnswer","nextProblem","wrongAnswer","onWrongAnswer","setTimeout","getProblem","firstAnswerInput","focus","evaluateProblem","MathHelper","resetAnswers","handleFirstAnswer","ev","val","handleSecondAnswer","components_AnswerModal","newProblem","onEndGame","style","fontSize","fontWeight","maxWidth","id","display","gridTemplateColumns","textAlign","marginRight","ref","input","placeholder","onKeyUp","onPaste","preventDefault","secondAnswerInput","marginTop","disabled","height","border","color","Done","divider","poinstStyle","retryGame","Timmer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_secondsIntervalRef","_this3","setTimeChanged","defaultProps","Lifes","push","marginLeft","Points","container","justifyContent","flex","title","margin","timeCol","padding","sectionContainer","RowScore","name","moment","Date","time","fromNow","TableScore","_ref2","playerName","scoreTable","JSON","parse","now","sort","b","slice","stringify","map","i","MathQuiz","isBeginningDone","lastPoints","onRetryGame","completeBeginning","components_Done","components_Lifes","components_Quiz","components_Beginning","App","gameStart","onStartGame","src_containers_MathQuiz","containers_Start","connect","s","onReStartGame","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9cd01e10.chunk.js","sourcesContent":["import {\n  SET_TIME,\n  GAIN_POINTS,\n  REMOVE_LIVE,\n  CORRECT_ANSWER,\n  FINISH_GAME,\n  RESTART_GAME,\n  REBOOT_GAME,\n  START_GAME,\n  EARN_LIFE\n} from \"../constants\";\n\nconst initialState = {\n  points: 0,\n  lifes: 3,\n  seconds: 20,\n  level: 1,\n  isFinished: false,\n  isStarted: false\n};\n\nexport const answerQuiz = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GAIN_POINTS:\n      const newPonts = state.points + action.payload;\n      return Object.assign({}, state, {\n        points: newPonts\n      });\n    case SET_TIME:\n      return Object.assign({}, state, {\n        seconds: action.payload\n      });\n    case CORRECT_ANSWER:\n      const newCorrectState = {\n        points: state.points + action.payload.points,\n        level: state.level + action.payload.level\n      };\n      return Object.assign({}, state, newCorrectState);\n    case REMOVE_LIVE:\n      const newLive = state.lifes - action.payload;\n      return Object.assign({}, state, {\n        lifes: newLive\n      });\n    case FINISH_GAME:\n      return Object.assign({}, state, {\n        isFinished: action.payload\n      });\n    case RESTART_GAME:\n      return Object.assign({}, state, {\n        points: 0,\n        lifes: 3,\n        seconds: 20,\n        level: 1,\n        isFinished: false\n      });\n    case START_GAME:\n      return Object.assign({}, state, {\n        isStarted: true\n      });\n    case EARN_LIFE:\n      return Object.assign({}, state, {\n        lifes: state.lifes + 1\n      });\n    case REBOOT_GAME:\n      return Object.assign({}, state, {\n        points: 0,\n        lifes: 3,\n        seconds: 20,\n        level: 1,\n        isFinished: false,\n        isStarted: false\n      });\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { answerQuiz } from './reducers/index'\n\n\nexport default compose(applyMiddleware(thunk))(createStore)(answerQuiz) // store;","export const CORRECT_ANSWER = \"CORRECT_ANSWER\";\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\nexport const SET_TIME = \"SET_TIME\";\nexport const GAIN_POINTS = \"GAIN_POINTS\";\nexport const REMOVE_LIVE = \"REMOVE_LIVE\";\nexport const FINISH_GAME = \"FINISH_GAME\";\nexport const RESTART_GAME = \"RESTART_GAME\";\nexport const REBOOT_GAME = \"REBOOT_GAME\";\nexport const START_GAME = \"START_GAME\";\nexport const EARN_LIFE = \"EARN_LIFE\";","import {\n  REMOVE_LIVE,\n  CORRECT_ANSWER,\n  SET_TIME,\n  FINISH_GAME,\n  RESTART_GAME,\n  REBOOT_GAME,\n  START_GAME,\n  EARN_LIFE\n} from \"../constants/index\";\n\nexport const correctAnswer = () => (dispatch) => {\n    dispatch({ type: CORRECT_ANSWER, payload: { points: 100, level: 1} });\n    \n};\n\nexport const wrongAnswer = () => (dispatch) => {\n    dispatch({ type: REMOVE_LIVE, payload: 1 });\n}\n\n\nexport const timeChaged = seconds => (dispatch) => {\n    dispatch({ type: SET_TIME, payload: seconds });    \n}\n\nexport const stateGame = (bol) => (dispatch) => {\n    if (bol) {\n        dispatch({ type: FINISH_GAME, payload: true });\n    } else {\n        dispatch({ type: RESTART_GAME, payload: true });\n    }\n}\n\nexport const reStartGame = () => (dispatch) => {\n    dispatch({ type: REBOOT_GAME });\n}\n\nexport const startGame = () => (dispatch) => {\n    dispatch({ type: START_GAME });\n}\n\nexport const earnLife = () => dispatch => {\n    dispatch({ type: EARN_LIFE });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ children, isClicked }) {\n  return (\n    <button className=\"App-link App-button\" onClick={isClicked}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  isClicked: PropTypes.func\n};\n\nexport default Button;\n","\nexport const Persistent = {\n\n    set(key, value) {\n        localStorage.setItem(key, value)\n    },\n\n    get(key) {\n        return localStorage.getItem(key);\n    }\n\n}\n\n\nexport const Session = {\n\n    set(key, value) {\n        sessionStorage.setItem(key, value)\n    },\n\n    get(key) {\n        return sessionStorage.getItem(key);\n    }\n\n}\n\nexport default {\n    Persistent,\n    Session\n};","import React from 'react';\nimport Button from '../components/Button';\nimport { Session } from '../utils/storage'\n\nclass Start extends React.Component {\n\n    state = {\n        player: \"player\"\n    }\n\n    setNameOfPlayer = (event) => {\n        this.setState({ player: event.target.value })\n    }\n\n    clicked = () => {\n        Session.set(\"onlinePlayer\", this.state.player)\n        this.props.startPressed();\n    }\n\n    render (){\n        return (\n            <div>\n                <div className=\"App-brandname\">\n                    <i className=\"fas fa-graduation-cap\"></i> \n                    <br/>    \n                    <br/>\n                    {/*<h2>Jogo dos</h2>*/}\n                    <h1>Jogo dos Sistemas de Equação</h1>\n                </div>\n                <Button isClicked={this.clicked}>Começar</Button>\n            </div>\n        )\n    }\n}\n\nexport default Start;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nclass Beginning extends React.Component {\n  state = {\n    msg: 3\n  };\n  intervalRef;\n\n  componentDidMount() {\n    this.intervalRef = setInterval(() => this.setState(this.handleCount), 1000);\n  }\n\n  handleCount = prevState => {\n    if (prevState.msg === 1) {\n      return { msg: undefined };\n    }\n    return { msg: prevState.msg - 1 };\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.msg === undefined) {\n      clearInterval(this.intervalRef);\n      this.props.isComplete();\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalRef);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.msg}</h1>\n      </div>\n    );\n  }\n}\n\n\nBeginning.propTypes = {\n  isComplete: PropTypes.func.isRequired,\n}\n\nexport default Beginning;\n","\nconst Colors = {\n    yellow: \"#d8b600\",\n    lightBlue: \"#61dafb\",\n    darkGray: \"#999ea7\",\n    midGray: \"#424855\",\n    lightGray: \"#f5f5f5\",\n    darkBg: \"#282c34\",\n    red:\"#ff6572\",\n    green: \"#31cd61\"\n}\n\nexport default Colors","import React from 'react';\nimport Colors from '../constant/colors'\nimport PropTypes from 'prop-types'\n\nfunction AnswerModal({ type, text }) {\n\n    const modalType = type === \"success\" ? \n        ({ class: \"correct-answer\", el: <i className=\"fas fa-check\"></i>}) : \n        ({ class: \"wrong-answer\", el: <i className=\"fas fa-times-circle\"></i>});\n    return (\n        <section>\n            <div className={`answer  ${modalType.class}`}>\n                <h2> {modalType.el} </h2>\n            </div>\n            {/*<Message type={type} text={text} />*/}\n        </section>\n        );\n}\n\nfunction Message({ text, type }) {\n    return (\n        <span>\n            {text && (type === \"success\") && <h4 style={{color: Colors.green }}>{text}</h4> } \n            {text && (type !== \"success\") && <h4 style={{color: Colors.midGray }}>Answer: <span style={{color: Colors.lightGray }}>{text}</span></h4>}\n        </span>\n    )\n}\n\n\nAnswerModal.propTypes = {\n    type: PropTypes.oneOf(['success', 'error']),\n    text: PropTypes.string,\n}\n\n\nexport default AnswerModal;","export const problems = [\r\n    {\r\n        \"description\": \"Uma lapiseira (x)  e dois cadernos (y) custam juntos 12 reais. Duas lapiseiras e 4 cadernos custam 24 reais. Quanto custa cada lapiseira e cada carderno?\",\r\n        \"answers\": [\r\n            \"x + y = 12\",\r\n            \"2x + 4y = 24\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Em uma praça há 18 crianças andando de bicicleta(y) ou de skate(x). No total, há 50 rodas girando pela praça. Quantas crianças andam de bicicleta e quantas andam de skate?\",\r\n        \"answers\": [\r\n            \"x + y = 18\",\r\n            \"4x + 2y = 50\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Leandro usou apenas notas de R$ 20,00(x) e de R$ 5,00(y) para fazer um pagamento de R$ 140,00. Quantas notas de cada tipo ele usou, sabendo que no total foram 10 notas?\",\r\n        \"answers\": [\r\n            \"x + y = 10\",\r\n            \"20x + 5y = 140\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Num aquário há 8 peixes, entre pequenos(x) e grandes(y). Se os pequenos fossem mais um, seria o dobro dos grandes. Quantos são os pequenos? E os grandes?\",\r\n        \"answers\": [\r\n            \"x + y = 8\",\r\n            \"x + 1 = 2y\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Descubra quais são os dois números em que o dobro do maior(x) somado com o triplo do menor(y) dá 16, e o maior deles somado com quíntuplo do menor dá 1.\",\r\n        \"answers\": [\r\n            \"2x + 3y = 16\",\r\n            \"x + 5y = 1\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Na sexta, Ana foi na feira e comprou um pastel de frango(x) e um de carne(y) por 10 reais. Na outra semana sua família toda quis o pastel também, então ela teve que comprar dez pasteis de frango e cinco de carne, dando ao todo 70 reais. Quanto custa cada sabor de pastel?\",\r\n        \"answers\": [\r\n            \"x + y = 10\",\r\n            \"10x + 5y = 70\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Em sua rua, Aline observou que havia 12 veículos sendo eles carros(y) e motos(x). Ao abaixar-se conseguiu visualizar 38 rodas. Qual a quantidade de carros e motos estacionados na sua rua?\",\r\n        \"answers\": [\r\n            \"x + y = 12\",\r\n            \"2x + 4y = 38\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Tayna pensa em 2 números, o dobro do primeiro(x) mais cinco é o igual ao segundo(y). Já o dobro do primeiro mais o triplo do segundo é igual a três. Quais os dois números pensados por ela?\",\r\n        \"answers\": [\r\n            \"2x + 5 = y\",\r\n            \"2x + 3y = 3\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Pensando em 2 números Richard fez a seguinte charada para Gledson. “O dobro do primeiro(x) mais o segundo(y) é igual a 2. O primeiro mais o triplo do segundo é igual a -4”. Sabendo disso qual os números que Gledson deve descobrir?\",\r\n        \"answers\": [\r\n            \"2x + y = 2\",\r\n            \"x + 3y = -4\"\r\n        ]\r\n    },\r\n    {\r\n        \"description\": \"Pensando em 2 números Ewerton fez a seguinte charada para Vanderson. “O primeiro(x) mais o segundo(y) é igual a -2. O segundo é igual ao dobro do primeiro mais 13 unidades”. Sabendo disso qual os números que Vanderson deve descobrir?\",\r\n        \"answers\": [\r\n            \"x + y = -2\",\r\n            \"y = 2x + 13\"\r\n        ]\r\n    }\r\n]\r\n","import {problems} from \"./problems\";\n\nconst generateProblem = () => {\n    return problems[Math.floor(Math.random() * problems.length)];\n};\n\nconst compare = (problem, firstAnswer, secondAnswer) => {\n    const answers = problem.answers;\n    let firstProblemAnswer = parseAnswer(answers[0]);\n    let secondProblemAnswer = parseAnswer(answers[1]);\n\n    let firstPlayerAnswer = parseAnswer(firstAnswer);\n    let secondPlayerAnswer = parseAnswer(secondAnswer);\n\n    return firstProblemAnswer === firstPlayerAnswer && secondProblemAnswer === secondPlayerAnswer;\n}\n\nconst parseAnswer = (answer) => {\n    return answer.toLowerCase().replaceAll(\" \", \"\");\n}\n\nexport default {\n    generateProblem,\n    compare\n}","import React from \"react\";\nimport AnswerModal from \"./AnswerModal\";\nimport { MathHelper } from \"../utils\";\n\nclass Quiz extends React.Component {\n  _isMounted = false;\n  _secondsIntervalRef;\n\n  state = {\n    problem: \"\",\n    answer: 0,\n    firstAnswer: \"\",\n    secondAnswer: \"\",\n    modal: \"\",\n    modalShowing: false,\n    streaks: 0\n  };\n\n  earnLife = () => {\n    this.props.onEarnLife();\n    this.showModal(\"success\", \"3 Seguidas! Você ganhou um ♥\");\n    this.setState({\n      streaks: 0\n    });\n  };\n\n  correctAnswer = () => {\n    if (this.state.streaks > 2) {\n      this.earnLife();\n    } else {\n      this.showModal(\"success\");\n    }\n\n    this._isMounted && this.props.onCorretAnswer();\n    this.setState(state => {\n      return {\n        streaks: state.streaks + 1\n      };\n    });\n\n    this.nextProblem();\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getProblem();\n    this.firstAnswerInput.focus();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.lifes < 1) {\n      this.props.onEndGame(this.state.points);\n      return false;\n    }\n    return nextProps.lifes > -1;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  wrongAnswer = () => {\n    this._isMounted && this.props.onWrongAnswer();\n    this.setState({\n      streaks: 0\n    });\n    this.showModal(\"error\", \"Resposta errada! Tente novamente.\");\n    this.nextProblem();\n  };\n\n  nextProblem = () => {\n    setTimeout(() => {\n      this.getProblem();\n      this._isMounted &&\n        this.setState({\n          modalShowing: false\n        });\n      if (this.props.lifes > 0) this.firstAnswerInput.focus();\n    }, 1300);\n  };\n\n  evaluateProblem = () => {\n    if (this.state.firstAnswer === \"\" || this.state.secondAnswer === \"\") {\n      return;\n    }\n    if (MathHelper.compare(this.state.problem, this.state.firstAnswer, this.state.secondAnswer)) {\n      this.resetAnswers();\n      return this.correctAnswer();\n    }\n    this.resetAnswers();\n    return this.wrongAnswer();\n  };\n\n  resetAnswers = () => {\n    this.setState({\n      firstAnswer: \"\",\n      secondAnswer: \"\"\n    });\n  }\n\n  handleFirstAnswer = ev => {\n    const val = ev.target.value;\n    this.setState({\n      firstAnswer: val.replaceAll(\" \", \"\")\n    });\n  };\n\n  handleSecondAnswer = ev => {\n    const val = ev.target.value;\n    this.setState({\n      secondAnswer: val.replaceAll(\" \", \"\")\n    });\n  };\n\n  showModal = (type, text) => {\n    this.setState({\n      modal: <AnswerModal type={type} text={text} />,\n      modalShowing: true\n    });\n  };\n\n  getProblem = () => {\n    const newProblem = MathHelper.generateProblem();\n    this._isMounted &&\n      this.setState({\n        problem: newProblem\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"show-up\">\n        <div>\n          {this.state.modalShowing ? (\n            this.state.modal\n          ) : (\n            <div>\n              <h5 style={{ fontSize: \"1em\", fontWeight: \"normal\", maxWidth: \"70vw\"}}> {this.state.problem.description} </h5>\n\n              <div id=\"inputs-container\" style={{ display: \"grid\", gridTemplateColumns: \"25% 50%\"}}>\n                <div id=\"symbol\" style={{textAlign: \"right\", marginRight: \"15px\"}}>\n                  <span className={\"symbol\"} style={{ }}>{ \"{\" }</span>\n                </div>\n                <div id=\"inputs\" style={{ display: \"grid\", gridTemplateColumns: \"auto\"}}>\n                  <input\n                      ref={input => {\n                        this.firstAnswerInput = input;\n                      }}\n                      className=\"App-input\"\n                      type=\"text\"\n                      placeholder=\"Ex.: x + y = 12\"\n                      onKeyUp={this.handleFirstAnswer}\n                      onPaste={(event) => event.preventDefault()}\n                  />\n                  <input\n                      ref={input => {\n                        this.secondAnswerInput = input;\n                      }}\n                      className=\"App-input\"\n                      type=\"text\"\n                      placeholder=\"Ex.: 2x + 4y = 24\"\n                      onKeyUp={this.handleSecondAnswer}\n                      onPaste={(event) => event.preventDefault()}\n                  />\n                </div>\n              </div>\n              <div className={\"row\"}>\n                <button\n                    className=\"App-link App-button\"\n                    onClick={this.evaluateProblem}\n                    style={{ marginTop: \"15px\" }}\n                    disabled={this.state.firstAnswer === \"\" || this.state.secondAnswer === \"\"}\n                >\n                  Responder\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst style = {\n  buttonRetry: {\n    fontSize: \"1.5em\",\n    color: \"#61dafb\",\n    fontFamily: \"fantasy\",\n    cursor: \"pointer\"\n  },\n  otherButton: {\n    color: \"white\",\n    fontFamily: \"fantasy\",\n    cursor: \"pointer\",\n    fontSize: \"1em\",\n    margin: \"0.1em auto 3em\"\n  },\n  divider: {\n    height: 0,\n    border: \"0.5px solid #61dafb\"\n  },\n  poinstStyle: {\n    color: \"#61dafb\",\n    fontWeight: \"bold\"\n  }\n};\n\nclass Done extends React.Component {\n  render() {\n    const { divider, buttonRetry, otherButton, poinstStyle } = style;\n    return (\n      <div>\n        <h1>FIM DE JOGO</h1>\n        <hr style={divider} />\n        <h3>\n          Pontuação Final: <b style={poinstStyle}>{this.props.points}</b>\n        </h3>\n        <br />\n        <button className={\"App-link App-button\"} onClick={this.props.retryGame}>\n          Tentar Novamente\n        </button>\n        {/*<h5 style={otherButton} onClick={this.props.onReStartGame}>*/}\n        {/*  Another player*/}\n        {/*</h5>*/}\n        {this.children}\n      </div>\n    );\n  }\n}\n\nDone.propTypes = {\n  points: PropTypes.number.isRequired,\n  retryGame: PropTypes.func.isRequired,\n  onReStartGame: PropTypes.func.isRequired\n}\n\nexport default Done;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Timmer extends React.Component {\n\n    _secondsIntervalRef;\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: this.props.seconds,\n            level: this.props.level\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n          seconds: this.props.seconds\n        });\n        this._secondsIntervalRef = setInterval(() => this.setState(prevState => ({\n            seconds: prevState.seconds\n        })), 1000)\n    }\n\n    componentDidUpdate() {\n        if (this.props.level !== this.state.level) {\n\n            this.setState(prevState => ({\n              level: this.props.level,\n              seconds: prevState.seconds + 20\n            }));\n            \n            this.props.setTimeChanged(this.state.seconds);\n        }\n\n        if(this.state.seconds < 0) {\n            this.props.onEndGame();\n        }\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this._secondsIntervalRef);\n    }\n\n    render() {\n        return (\n            <span>\n                {/*<i className=\"fas fa-clock\"></i> <b>{ this.state.seconds }</b>*/}\n            </span>\n        )\n    }\n}\n\nTimmer.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    level: PropTypes.number.isRequired,\n}\n\nTimmer.defaultProps = {\n    level: 0    \n}\n\nexport default Timmer;","import React from 'react'\nimport Colors from '../constant/colors';\nimport PropTypes from 'prop-types'\n\nfunction Lifes({ lifes }) {\n\n    let hearts = [];\n\n    // if (lifes < 5) {\n    //     for (let i = 0; i < lifes; i++) {\n    //         hearts.push(<i key={i} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\n    //     }\n    // } else {\n        hearts.push(<i key={lifes} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\n    // }\n\n    \n    return (\n        <span style={{color: Colors.red}}>\n            <i style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i> {<span style={{ color: \"white\"}}>{`${lifes}`}</span>}\n        </span>\n    );\n}\n\nLifes.propTypes = {\n    lifes: PropTypes.number.isRequired\n}\n\nexport default Lifes","import React from 'react'\nimport Colors from '../constant/colors'\n\nexport default function Points ({ points }) {\n\n    return (\n        <span>\n            <i className=\"fas fa-star\" style={{ color: Colors.yellow }}></i> {points}\n        </span>\n        )\n\n}","import React from 'react'\nimport { Session, Persistent } from '../utils/storage'\nimport * as moment from 'moment'\nimport Colors from '../constant/colors';\n\n\n\nconst style = {\n    container:{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n    },\n    el: {\n        flex: 1\n    },\n    title: {\n        margin: \"0.6em auto\"\n    },\n    divider: { border: `0.5px solid ${Colors.midGray}`},\n    timeCol: {\n        flex: 1,\n        padding: \"0.3em 0em\",\n        fontSize: \"0.6em\",\n        color: Colors.darkGray,\n    },\n    sectionContainer: { textAlign: \"left\", padding: \"0.15em 0em\" }\n}\n\nfunction RowScore ({ player }) {\n    return (\n        <div style={style.sectionContainer}>\n            <h5 style={style.title}>{player.name}</h5>\n            <div style={style.container}>\n                <small style={style.timeCol}>\n                    <i className=\"fas fa-clock\"></i> \n                    {\" \" + moment(new Date(player.time)).fromNow()}\n                </small>\n                <small style={style.el}><i className=\"fas fa-star\" style={{color: Colors.yellow }}></i> {player.points}</small>\n            </div>\n            <hr style={style.divider} />\n        </div>\n    )\n}\n\nexport default function TableScore ({ points }) {\n\n    const playerName = Session.get(\"onlinePlayer\");\n    let scoreTable = JSON.parse(Persistent.get(\"scoreTable\")) || [];\n\n    scoreTable.push({\n        name: playerName,\n        points,\n        time: Date.now()\n    })\n\n    scoreTable = scoreTable.sort((a, b) => b.points - a.points).slice(0,4)\n\n    Persistent.set(\"scoreTable\", JSON.stringify(scoreTable))\n\n    return (\n        <div>\n            {\n                scoreTable.map((player, i) => {\n                    return (\n                        <RowScore player={player} key={i} />\n                    )\n                })\n            }\n        </div>\n    )\n\n}","import React from 'react';\nimport Beginning from \"../components/Beginning\";\nimport Quiz from \"../components/Quiz\";\nimport Done from \"../components/Done\";\nimport Timmer from '../components/Timmer';\nimport Lifes from '../components/Lifes'\nimport Points from '../components/Points'\nimport \"./MathQuiz.css\"\nimport TableScore from '../components/TableScore';\n\nclass MathQuiz extends React.Component {\n  state = {\n    isBeginningDone: false,\n    lastPoints: 0\n  };\n\n  retryGame = () => {\n    this.setState({ isBeginningDone: false })\n    this.props.onRetryGame();\n  }\n\n  completeBeginning = () => {\n    this.setState({ isBeginningDone: true });\n  };\n\n  render() {\n    return !this.props.isFinished ? (\n      <div>\n        {!this.state.isBeginningDone ? (\n          <Beginning isComplete={this.completeBeginning} />\n        ) : (\n          <div>\n              <div className=\"App-header-bar\">\n                <Lifes {...this.props} />\n                <Points {...this.props} />\n              </div>\n              <Quiz {...this.props} />\n          </div>\n        )}\n      </div>\n    ) : (\n      <Done {...this.props} retryGame={this.retryGame} >\n        <TableScore {...this.props} />\n      </ Done>\n    );\n  }\n}\n\nexport default MathQuiz;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { mapDispatchToProps, mapStateToProps } from './redux/index'\nimport Start from './containers/Start';\nimport MathQuiz from './containers/MathQuiz';\nimport './App.css';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  \n\n  gameStart = () => {\n    this.props.onStartGame();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            !this.props.isStarted ? (\n              <Start startPressed={this.gameStart} />\n            ) : (\n              <MathQuiz { ...this.props} gameStart={this.gameStart}/>\n            )\n          }\n        </header>\n        {/*<Footer></Footer>*/}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  correctAnswer,\n  wrongAnswer,\n  timeChaged,\n  stateGame,\n  reStartGame,\n  startGame,\n  earnLife\n} from \"./actions/index\";\n\nexport const mapStateToProps = state => {\n  return {\n    points: state.points,\n    lifes: state.lifes,\n    seconds: state.seconds,\n    level: state.level,\n    isFinished: state.isFinished,\n    isStarted: state.isStarted\n  };\n};\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    onCorretAnswer: s => dispatch(correctAnswer(s)),\n    onWrongAnswer: () => dispatch(wrongAnswer()),\n    setTimeChanged: s => dispatch(timeChaged(s)),\n    onEndGame: () => dispatch(stateGame(true)),\n    onRetryGame: () => dispatch(stateGame(false)),\n    onReStartGame: () => dispatch(reStartGame()),\n    onStartGame: () => dispatch(startGame()),\n    onEarnLife: () => dispatch(earnLife()),\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}